//REKT mk1A Escape Pod  -	-	-	-	-	-	-	-	-	-	-
@PART[rektmk1a]:NEEDS[USILifeSupport]:FINAL  
{ 

// Short term habitation, 6 crew days of supplies storage. Minimal snacks to make room for avionics.
// Use replace (%) rather than edit (@), to ensure that the following values are loaded regardless of the presence/absence of other mods  
	%RESOURCE[supplies] 
	{ 
		%amount = 100  
		%maxamount = 100
	} 
	%MODULE = ModuleScalarLevelIndicator
	{
		controllerName = USILSLevel 
		// Use minimum input value. Also supports "maximum" and "average" 
		operation = minimum 
		inputs = SuppliesLevel, ElectricChargeLevel
		highColor = $HighResource 
		mediumColor = $MediumResource 
		lowColor = $LowResource 
		criticalColor = pulsate($LowResource, 1200, 1, 0.6) 
	} 
	MODULE 
	{ 
 		name = ModuleBooleanIndicator 
 		// Use logical AND of inputs.  Also supports "or" 
		operation = and 
		// Note that you can put a "!" in front of a boolean input to invert it 
 		inputs = SuppliesEnabled, ElectricChargeEnabled
 		activeColor = USILSLevel 
 		inactiveColor = blink(dualLevel, 900, $Off, 300) 
 		emissiveName = USILSIndicator 
 	} 
} 



//REKT mk1N Escape Pod -	-	-	-	-	-	-	-	-	-	-
@PART[rektmk1n]:NEEDS[USILifeSupport]:FINAL  
{ 

// Short term habitation, 6 crew days of supplies. Minimal snacks to make room for avionics.

// Use replace (%) rather than edit (@), to ensure that the following values are loaded regardless of the presence/absence of other mods  
	%RESOURCE[supplies] 
	{ 
		%amount = 100 
		%maxAmount = 100 
	} 
	%MODULE = ModuleScalarLevelIndicator
	{
		controllerName = USILSLevel 
		// Use minimum input value. Also supports "maximum" and "average" 
		operation = minimum 
		inputs = SuppliesLevel, ElectricChargeLevel
		highColor = $HighResource 
		mediumColor = $MediumResource 
		lowColor = $LowResource 
		criticalColor = pulsate($LowResource, 1200, 1, 0.6) 
	} 
	MODULE 
	{ 
 		name = ModuleBooleanIndicator 
 		// Use logical AND of inputs.  Also supports "or" 
		operation = and 
		// Note that you can put a "!" in front of a boolean input to invert it 
 		inputs = SuppliesEnabled, ElectricChargeEnabled
 		activeColor = USILSLevel 
 		inactiveColor = blink(dualLevel, 900, $Off, 300) 
 		emissiveName = USILSIndicator 
 	} 
} 
}


//REKT mk1D Escape Pod -	-	-	-	-	-	-	-	-	-	- 
@PART[rektmk1d]:NEEDS[USILifeSupport]:FINAL  
{ 

// Short term habitation, 30 crew days of supplies. More storage than the re-entry variants as most of the control gubbins have been ripped out for extra snacks. 

// Use replace (%) rather than edit (@), to ensure that the following values are loaded regardless of the presence/absence of other mods  
	%RESOURCE[supplies] 
	{ 
		%amount = 500  
		%max
	} 
	%MODULE = ModuleScalarLevelIndicator
	{
		controllerName = USILSLevel 
		// Use minimum input value. Also supports "maximum" and "average" 
		operation = minimum 
		inputs = SuppliesLevel, ElectricChargeLevel
		highColor = $HighResource 
		mediumColor = $MediumResource 
		lowColor = $LowResource 
		criticalColor = pulsate($LowResource, 1200, 1, 0.6) 
	} 
	MODULE 
	{ 
 		name = ModuleBooleanIndicator 
 		// Use logical AND of inputs.  Also supports "or" 
		operation = and 
		// Note that you can put a "!" in front of a boolean input to invert it 
 		inputs = SuppliesEnabled, ElectricChargeEnabled
 		activeColor = USILSLevel 
 		inactiveColor = blink(dualLevel, 900, $Off, 300) 
 		emissiveName = USILSIndicator 
 	} 
} 
}  